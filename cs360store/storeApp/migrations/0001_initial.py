# Generated by Django 4.0.3 on 2022-03-27 00:24

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique ID for this particular order', primary_key=True, serialize=False)),
                ('date_placed', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('purchaser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductListing',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique ID for this particular order', primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(editable=False, help_text='Enter a name for your product (this cannot be changed later)', max_length=200)),
                ('imageURL', models.URLField(help_text='Enter image URL')),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('description', models.TextField()),
                ('quantityAvailable', models.IntegerField(blank=True, help_text='How many are available? Leave blank if unlimited.', null=True)),
                ('restockDate', models.DateField(blank=True, help_text='Leave blank if N/A', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceListing',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique ID for this particular service', primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(editable=False, help_text='Enter a name for your service (this cannot be changed later)', max_length=200)),
                ('imageURL', models.URLField(blank='True', help_text='Enter image URL', null=True)),
                ('price', models.DecimalField(decimal_places=2, help_text="Max: 99,999.99. Set 0 'Free'", max_digits=7)),
                ('price_per_hour', models.BooleanField(default=False, help_text='Is this service priced per hour?')),
                ('description', models.TextField()),
                ('serviceArea', models.IntegerField(help_text='Enter miles from your Business Address that you service.')),
                ('daysAvailable', models.CharField(blank=True, help_text='Enter the days/times this service is available, i.e. M-Th 9-5, Fri-Sun 10-1', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_name', models.CharField(help_text='Enter your vendor name.', max_length=200, unique=True)),
                ('phone_number', models.CharField(help_text='1 (234) 567 8901', max_length=20)),
                ('emergency_phone_number', models.CharField(help_text='1 (234) 567 8901', max_length=20)),
                ('full_address', models.CharField(help_text='Enter your full address.', max_length=1024)),
                ('address1', models.CharField(help_text='Address line 1', max_length=1024)),
                ('address2', models.CharField(blank=True, help_text='Address line 2', max_length=1024, null=True)),
                ('zip_code', models.CharField(help_text='Zip Code', max_length=12)),
                ('city', models.CharField(help_text='City', max_length=1024)),
                ('country', models.CharField(help_text='Country', max_length=1024)),
                ('date_created', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter your full name.', max_length=1024)),
                ('address1', models.CharField(help_text='Address line 1', max_length=1024)),
                ('address2', models.CharField(help_text='Address line 2', max_length=1024)),
                ('zip_code', models.CharField(help_text='Zip Code', max_length=12)),
                ('city', models.CharField(help_text='City', max_length=1024)),
                ('country', models.CharField(help_text='Country', max_length=1024)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Shipping Address',
                'verbose_name_plural': 'Shipping Addresses',
            },
        ),
        migrations.CreateModel(
            name='ServiceTag',
            fields=[
                ('name', models.CharField(help_text='Enter a tag; i.e. "electronics"', max_length=200, primary_key=True, serialize=False, unique=True)),
                ('product', models.ManyToManyField(to='storeApp.servicelisting')),
            ],
        ),
        migrations.AddField(
            model_name='servicelisting',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='storeApp.vendor'),
        ),
        migrations.CreateModel(
            name='ProductTag',
            fields=[
                ('name', models.CharField(help_text='Enter a tag; i.e. "electronics"', max_length=200, primary_key=True, serialize=False, unique=True)),
                ('product', models.ManyToManyField(to='storeApp.productlisting')),
            ],
        ),
        migrations.AddField(
            model_name='productlisting',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='storeApp.vendor'),
        ),
        migrations.CreateModel(
            name='InvoiceService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storeApp.invoice')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='storeApp.servicelisting')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storeApp.invoice')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='storeApp.productlisting')),
            ],
        ),
        migrations.AddField(
            model_name='invoice',
            name='vendor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='storeApp.vendor'),
        ),
        migrations.CreateModel(
            name='BillingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter your full name.', max_length=1024)),
                ('address1', models.CharField(help_text='Address line 1', max_length=1024)),
                ('address2', models.CharField(help_text='Address line 2', max_length=1024)),
                ('zip_code', models.CharField(help_text='Zip Code', max_length=12)),
                ('city', models.CharField(help_text='City', max_length=1024)),
                ('country', models.CharField(help_text='Country', max_length=1024)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Billing Address',
                'verbose_name_plural': 'Billing Addresses',
            },
        ),
    ]
